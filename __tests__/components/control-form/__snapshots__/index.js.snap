// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`动态表单 动态表单 用法 1`] = `
<ControlForm
  data={
    Object {
      "username": "hubenlv2",
    }
  }
  getSettings={[Function]}
  onValuesChange={[MockFunction]}
  render={[Function]}
>
  <Form(WrappedComponent)
    data={
      Object {
        "username": Object {
          "value": "hubenlv2",
        },
      }
    }
    onChange={[Function]}
    onValuesChange={[Function]}
    render={[Function]}
    settings={[Function]}
  >
    <Component
      data={
        Object {
          "username": Object {
            "value": "hubenlv2",
          },
        }
      }
      form={
        Object {
          "getFieldDecorator": [Function],
          "getFieldError": [Function],
          "getFieldInstance": [Function],
          "getFieldProps": [Function],
          "getFieldValue": [Function],
          "getFieldsError": [Function],
          "getFieldsValue": [Function],
          "isFieldTouched": [Function],
          "isFieldValidating": [Function],
          "isFieldsTouched": [Function],
          "isFieldsValidating": [Function],
          "isSubmitting": [Function],
          "resetFields": [Function],
          "setFields": [Function],
          "setFieldsInitialValue": [Function],
          "setFieldsValue": [Function],
          "submit": [Function],
          "validateFields": [Function],
          "validateFieldsAndScroll": [Function],
        }
      }
      onChange={[Function]}
      onValuesChange={[Function]}
      render={[Function]}
      settings={[Function]}
    >
      <Form
        colon={true}
        hideRequiredMark={false}
        layout="horizontal"
        onSubmit={[Function]}
      >
        <form
          className="ant-form ant-form-horizontal"
          onSubmit={[Function]}
        >
          <FormItem
            hasFeedback={false}
            key="username"
          >
            <Row
              className="ant-form-item"
              gutter={0}
              key="row"
            >
              <div
                className="ant-row ant-form-item"
              >
                <Col
                  className="ant-form-item-control-wrapper"
                >
                  <div
                    className="ant-col ant-form-item-control-wrapper"
                  >
                    <div
                      className="ant-form-item-control has-success"
                    >
                      <span
                        className="ant-form-item-children"
                      >
                        <Input
                          data-__field={
                            Object {
                              "name": "username",
                              "value": "hubenlv2",
                            }
                          }
                          data-__meta={
                            Object {
                              "name": "username",
                              "originalProps": Object {
                                "children": undefined,
                                "disabled": false,
                                "id": "username",
                                "placeholder": "Username",
                                "prefix": <Icon
                                  style={
                                    Object {
                                      "color": "rgba(0,0,0,.25)",
                                    }
                                  }
                                  type="user"
                                />,
                                "type": "text",
                              },
                              "ref": null,
                              "rules": Array [
                                Object {
                                  "message": "Please input your Username!",
                                  "required": true,
                                },
                                Object {
                                  "max": 20,
                                  "message": "Please input your max!",
                                },
                                Object {
                                  "message": "Please input your email!",
                                  "type": "email",
                                },
                              ],
                              "trigger": "onChange",
                              "validate": Array [
                                Object {
                                  "rules": Array [
                                    Object {
                                      "message": "Please input your Username!",
                                      "required": true,
                                    },
                                    Object {
                                      "max": 20,
                                      "message": "Please input your max!",
                                    },
                                    Object {
                                      "message": "Please input your email!",
                                      "type": "email",
                                    },
                                  ],
                                  "trigger": Array [
                                    "onChange",
                                  ],
                                },
                              ],
                              "validateFirst": true,
                              "valuePropName": "value",
                            }
                          }
                          disabled={false}
                          id="username"
                          onChange={[Function]}
                          placeholder="Username"
                          prefix={
                            <Icon
                              style={
                                Object {
                                  "color": "rgba(0,0,0,.25)",
                                }
                              }
                              type="user"
                            />
                          }
                          type="text"
                          value="hubenlv2"
                        >
                          <span
                            className="ant-input-affix-wrapper"
                          >
                            <span
                              className="ant-input-prefix"
                            >
                              <Icon
                                style={
                                  Object {
                                    "color": "rgba(0,0,0,.25)",
                                  }
                                }
                                type="user"
                              >
                                <LocaleReceiver
                                  componentName="Icon"
                                >
                                  <i
                                    aria-label="icon: user"
                                    className="anticon anticon-user"
                                    style={
                                      Object {
                                        "color": "rgba(0,0,0,.25)",
                                      }
                                    }
                                  >
                                    <IconReact
                                      className=""
                                      type="user-o"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className=""
                                        data-icon="user"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        key="svg-user"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M858.5 763.6a374 374 0 0 0-80.6-119.5 375.63 375.63 0 0 0-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 0 0-80.6 119.5A371.7 371.7 0 0 0 136 901.8a8 8 0 0 0 8 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 0 0 8-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z"
                                          key="svg-user-svg-0"
                                        />
                                      </svg>
                                    </IconReact>
                                  </i>
                                </LocaleReceiver>
                              </Icon>
                            </span>
                            <input
                              className="ant-input"
                              data-__field={
                                Object {
                                  "name": "username",
                                  "value": "hubenlv2",
                                }
                              }
                              data-__meta={
                                Object {
                                  "name": "username",
                                  "originalProps": Object {
                                    "children": undefined,
                                    "disabled": false,
                                    "id": "username",
                                    "placeholder": "Username",
                                    "prefix": <Icon
                                      style={
                                        Object {
                                          "color": "rgba(0,0,0,.25)",
                                        }
                                      }
                                      type="user"
                                    />,
                                    "type": "text",
                                  },
                                  "ref": null,
                                  "rules": Array [
                                    Object {
                                      "message": "Please input your Username!",
                                      "required": true,
                                    },
                                    Object {
                                      "max": 20,
                                      "message": "Please input your max!",
                                    },
                                    Object {
                                      "message": "Please input your email!",
                                      "type": "email",
                                    },
                                  ],
                                  "trigger": "onChange",
                                  "validate": Array [
                                    Object {
                                      "rules": Array [
                                        Object {
                                          "message": "Please input your Username!",
                                          "required": true,
                                        },
                                        Object {
                                          "max": 20,
                                          "message": "Please input your max!",
                                        },
                                        Object {
                                          "message": "Please input your email!",
                                          "type": "email",
                                        },
                                      ],
                                      "trigger": Array [
                                        "onChange",
                                      ],
                                    },
                                  ],
                                  "validateFirst": true,
                                  "valuePropName": "value",
                                }
                              }
                              disabled={false}
                              id="username"
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              placeholder="Username"
                              style={null}
                              type="text"
                              value="hubenlv2"
                            />
                          </span>
                        </Input>
                      </span>
                      <Animate
                        animation={Object {}}
                        component=""
                        componentProps={Object {}}
                        key="help"
                        onAppear={[Function]}
                        onEnd={[Function]}
                        onEnter={[Function]}
                        onLeave={[Function]}
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="show-help"
                      />
                    </div>
                  </div>
                </Col>
              </div>
            </Row>
          </FormItem>
          <FormItem
            hasFeedback={false}
            key="password"
          >
            <Row
              className="ant-form-item"
              gutter={0}
              key="row"
            >
              <div
                className="ant-row ant-form-item"
              >
                <Col
                  className="ant-form-item-control-wrapper"
                >
                  <div
                    className="ant-col ant-form-item-control-wrapper"
                  >
                    <div
                      className="ant-form-item-control"
                    >
                      <span
                        className="ant-form-item-children"
                      >
                        <Input
                          data-__field={
                            Object {
                              "name": "password",
                              "value": undefined,
                            }
                          }
                          data-__meta={
                            Object {
                              "name": "password",
                              "originalProps": Object {
                                "children": undefined,
                                "disabled": false,
                                "id": "password",
                                "placeholder": "Password",
                                "prefix": <Icon
                                  style={
                                    Object {
                                      "color": "rgba(0,0,0,.25)",
                                    }
                                  }
                                  type="lock"
                                />,
                                "type": "password",
                              },
                              "ref": null,
                              "rules": Array [
                                Object {
                                  "message": "Please input your password!",
                                  "required": false,
                                },
                              ],
                              "trigger": "onChange",
                              "validate": Array [
                                Object {
                                  "rules": Array [
                                    Object {
                                      "message": "Please input your password!",
                                      "required": false,
                                    },
                                  ],
                                  "trigger": Array [
                                    "onChange",
                                    "onBlur",
                                  ],
                                },
                              ],
                              "validateTrigger": Array [
                                "onChange",
                                "onBlur",
                              ],
                              "valuePropName": "value",
                            }
                          }
                          disabled={false}
                          id="password"
                          onBlur={[Function]}
                          onChange={[Function]}
                          placeholder="Password"
                          prefix={
                            <Icon
                              style={
                                Object {
                                  "color": "rgba(0,0,0,.25)",
                                }
                              }
                              type="lock"
                            />
                          }
                          type="password"
                        >
                          <span
                            className="ant-input-affix-wrapper"
                          >
                            <span
                              className="ant-input-prefix"
                            >
                              <Icon
                                style={
                                  Object {
                                    "color": "rgba(0,0,0,.25)",
                                  }
                                }
                                type="lock"
                              >
                                <LocaleReceiver
                                  componentName="Icon"
                                >
                                  <i
                                    aria-label="icon: lock"
                                    className="anticon anticon-lock"
                                    style={
                                      Object {
                                        "color": "rgba(0,0,0,.25)",
                                      }
                                    }
                                  >
                                    <IconReact
                                      className=""
                                      type="lock-o"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className=""
                                        data-icon="lock"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        key="svg-lock"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 1 0-56 0z"
                                          key="svg-lock-svg-0"
                                        />
                                      </svg>
                                    </IconReact>
                                  </i>
                                </LocaleReceiver>
                              </Icon>
                            </span>
                            <input
                              className="ant-input"
                              data-__field={
                                Object {
                                  "name": "password",
                                  "value": undefined,
                                }
                              }
                              data-__meta={
                                Object {
                                  "name": "password",
                                  "originalProps": Object {
                                    "children": undefined,
                                    "disabled": false,
                                    "id": "password",
                                    "placeholder": "Password",
                                    "prefix": <Icon
                                      style={
                                        Object {
                                          "color": "rgba(0,0,0,.25)",
                                        }
                                      }
                                      type="lock"
                                    />,
                                    "type": "password",
                                  },
                                  "ref": null,
                                  "rules": Array [
                                    Object {
                                      "message": "Please input your password!",
                                      "required": false,
                                    },
                                  ],
                                  "trigger": "onChange",
                                  "validate": Array [
                                    Object {
                                      "rules": Array [
                                        Object {
                                          "message": "Please input your password!",
                                          "required": false,
                                        },
                                      ],
                                      "trigger": Array [
                                        "onChange",
                                        "onBlur",
                                      ],
                                    },
                                  ],
                                  "validateTrigger": Array [
                                    "onChange",
                                    "onBlur",
                                  ],
                                  "valuePropName": "value",
                                }
                              }
                              disabled={false}
                              id="password"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onKeyDown={[Function]}
                              placeholder="Password"
                              style={null}
                              type="password"
                              value=""
                            />
                          </span>
                        </Input>
                      </span>
                      <Animate
                        animation={Object {}}
                        component=""
                        componentProps={Object {}}
                        key="help"
                        onAppear={[Function]}
                        onEnd={[Function]}
                        onEnter={[Function]}
                        onLeave={[Function]}
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="show-help"
                      />
                    </div>
                  </div>
                </Col>
              </div>
            </Row>
          </FormItem>
          <FormItem
            hasFeedback={false}
            key="type"
            label="Type"
          >
            <Row
              className="ant-form-item"
              gutter={0}
              key="row"
            >
              <div
                className="ant-row ant-form-item"
              >
                <Col
                  className="ant-form-item-label"
                >
                  <div
                    className="ant-col ant-form-item-label"
                  >
                    <label
                      className="ant-form-item-required"
                      htmlFor="type"
                      onClick={[Function]}
                      title="Type"
                    >
                      Type
                    </label>
                  </div>
                </Col>
                <Col
                  className="ant-form-item-control-wrapper"
                >
                  <div
                    className="ant-col ant-form-item-control-wrapper"
                  >
                    <div
                      className="ant-form-item-control"
                    >
                      <span
                        className="ant-form-item-children"
                      >
                        <Select
                          choiceTransitionName="zoom"
                          data-__field={
                            Object {
                              "name": "type",
                              "value": undefined,
                            }
                          }
                          data-__meta={
                            Object {
                              "name": "type",
                              "originalProps": Object {
                                "children": Array [
                                  <Option
                                    value="empty"
                                  >
                                    Empty
                                  </Option>,
                                ],
                                "choiceTransitionName": "zoom",
                                "showSearch": false,
                                "transitionName": "slide-up",
                              },
                              "ref": null,
                              "rules": Array [
                                Object {
                                  "required": true,
                                },
                              ],
                              "trigger": "onChange",
                              "validate": Array [
                                Object {
                                  "rules": Array [
                                    Object {
                                      "required": true,
                                    },
                                  ],
                                  "trigger": Array [
                                    "onChange",
                                  ],
                                },
                              ],
                              "valuePropName": "value",
                            }
                          }
                          id="type"
                          onChange={[Function]}
                          showSearch={false}
                          transitionName="slide-up"
                        >
                          <Select
                            allowClear={false}
                            autoClearSearchValue={true}
                            backfill={false}
                            choiceTransitionName="zoom"
                            className=""
                            clearIcon={
                              <Icon
                                className="ant-select-clear-icon"
                                theme="filled"
                                type="close-circle"
                              />
                            }
                            combobox={false}
                            data-__field={
                              Object {
                                "name": "type",
                                "value": undefined,
                              }
                            }
                            data-__meta={
                              Object {
                                "name": "type",
                                "originalProps": Object {
                                  "children": Array [
                                    <Option
                                      value="empty"
                                    >
                                      Empty
                                    </Option>,
                                  ],
                                  "choiceTransitionName": "zoom",
                                  "showSearch": false,
                                  "transitionName": "slide-up",
                                },
                                "ref": null,
                                "rules": Array [
                                  Object {
                                    "required": true,
                                  },
                                ],
                                "trigger": "onChange",
                                "validate": Array [
                                  Object {
                                    "rules": Array [
                                      Object {
                                        "required": true,
                                      },
                                    ],
                                    "trigger": Array [
                                      "onChange",
                                    ],
                                  },
                                ],
                                "valuePropName": "value",
                              }
                            }
                            defaultActiveFirstOption={true}
                            defaultOpen={false}
                            dropdownMatchSelectWidth={true}
                            dropdownMenuStyle={Object {}}
                            dropdownRender={[Function]}
                            dropdownStyle={Object {}}
                            id="type"
                            inputIcon={
                              <Icon
                                className="ant-select-arrow-icon"
                                type="down"
                              />
                            }
                            labelInValue={false}
                            menuItemSelectedIcon={
                              <Icon
                                className="ant-select-selected-icon"
                                type="check"
                              />
                            }
                            multiple={false}
                            notFoundContent={
                              <Context.Consumer>
                                [Function]
                              </Context.Consumer>
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            onDeselect={[Function]}
                            onFocus={[Function]}
                            onInputKeyDown={[Function]}
                            onSearch={[Function]}
                            onSelect={[Function]}
                            optionFilterProp="value"
                            optionLabelProp="children"
                            placeholder=""
                            prefixCls="ant-select"
                            removeIcon={
                              <Icon
                                className="ant-select-remove-icon"
                                type="close"
                              />
                            }
                            showAction={
                              Array [
                                "click",
                              ]
                            }
                            showSearch={false}
                            tabIndex={0}
                            tags={false}
                            tokenSeparators={Array []}
                            transitionName="slide-up"
                          >
                            <SelectTrigger
                              ariaId="test-uuid"
                              backfillValue=""
                              combobox={false}
                              defaultActiveFirstOption={true}
                              dropdownMatchSelectWidth={true}
                              dropdownMenuStyle={Object {}}
                              dropdownRender={[Function]}
                              dropdownStyle={Object {}}
                              empty={false}
                              inputValue=""
                              menuItemSelectedIcon={
                                <Icon
                                  className="ant-select-selected-icon"
                                  type="check"
                                />
                              }
                              multiple={false}
                              onDropdownVisibleChange={[Function]}
                              onMenuDeselect={[Function]}
                              onMenuSelect={[Function]}
                              onPopupFocus={[Function]}
                              options={Array []}
                              prefixCls="ant-select"
                              showAction={
                                Array [
                                  "click",
                                ]
                              }
                              showSearch={false}
                              transitionName="slide-up"
                              value={Array []}
                              visible={false}
                            >
                              <Trigger
                                action={Array []}
                                afterPopupVisibleChange={[Function]}
                                ariaId="test-uuid"
                                backfillValue=""
                                blurDelay={0.15}
                                builtinPlacements={
                                  Object {
                                    "bottomLeft": Object {
                                      "offset": Array [
                                        0,
                                        4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "tl",
                                        "bl",
                                      ],
                                    },
                                    "topLeft": Object {
                                      "offset": Array [
                                        0,
                                        -4,
                                      ],
                                      "overflow": Object {
                                        "adjustX": 0,
                                        "adjustY": 1,
                                      },
                                      "points": Array [
                                        "bl",
                                        "tl",
                                      ],
                                    },
                                  }
                                }
                                combobox={false}
                                defaultActiveFirstOption={true}
                                defaultPopupVisible={false}
                                destroyPopupOnHide={false}
                                dropdownMatchSelectWidth={true}
                                dropdownMenuStyle={Object {}}
                                dropdownRender={[Function]}
                                dropdownStyle={Object {}}
                                focusDelay={0}
                                getDocument={[Function]}
                                getPopupClassNameFromAlign={[Function]}
                                hideAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                inputValue=""
                                mask={false}
                                maskClosable={true}
                                menuItemSelectedIcon={
                                  <Icon
                                    className="ant-select-selected-icon"
                                    type="check"
                                  />
                                }
                                mouseEnterDelay={0}
                                mouseLeaveDelay={0.1}
                                multiple={false}
                                onDropdownVisibleChange={[Function]}
                                onMenuDeselect={[Function]}
                                onMenuSelect={[Function]}
                                onPopupAlign={[Function]}
                                onPopupVisibleChange={[Function]}
                                options={Array []}
                                popup={
                                  <DropdownMenu
                                    ariaId="test-uuid"
                                    backfillValue=""
                                    defaultActiveFirstOption={true}
                                    dropdownMenuStyle={Object {}}
                                    inputValue=""
                                    menuItemSelectedIcon={
                                      <Icon
                                        className="ant-select-selected-icon"
                                        type="check"
                                      />
                                    }
                                    menuItems={Array []}
                                    multiple={false}
                                    onMenuDeselect={[Function]}
                                    onMenuSelect={[Function]}
                                    onPopupFocus={[Function]}
                                    prefixCls="ant-select-dropdown"
                                    value={Array []}
                                    visible={false}
                                  />
                                }
                                popupAlign={Object {}}
                                popupClassName="ant-select-dropdown--single"
                                popupPlacement="bottomLeft"
                                popupStyle={Object {}}
                                popupTransitionName="slide-up"
                                popupVisible={false}
                                prefixCls="ant-select-dropdown"
                                showAction={
                                  Array [
                                    "click",
                                  ]
                                }
                                showSearch={false}
                                transitionName="slide-up"
                                value={Array []}
                                visible={false}
                              >
                                <div
                                  className="ant-select ant-select-enabled"
                                  id="type"
                                  key="trigger"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseOut={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchStart={[Function]}
                                >
                                  <div
                                    aria-autocomplete="list"
                                    aria-controls="test-uuid"
                                    aria-expanded={false}
                                    aria-haspopup="true"
                                    className="ant-select-selection
            ant-select-selection--single"
                                    data-__field={
                                      Object {
                                        "name": "type",
                                        "value": undefined,
                                      }
                                    }
                                    data-__meta={
                                      Object {
                                        "name": "type",
                                        "originalProps": Object {
                                          "children": Array [
                                            <Option
                                              value="empty"
                                            >
                                              Empty
                                            </Option>,
                                          ],
                                          "choiceTransitionName": "zoom",
                                          "showSearch": false,
                                          "transitionName": "slide-up",
                                        },
                                        "ref": null,
                                        "rules": Array [
                                          Object {
                                            "required": true,
                                          },
                                        ],
                                        "trigger": "onChange",
                                        "validate": Array [
                                          Object {
                                            "rules": Array [
                                              Object {
                                                "required": true,
                                              },
                                            ],
                                            "trigger": Array [
                                              "onChange",
                                            ],
                                          },
                                        ],
                                        "valuePropName": "value",
                                      }
                                    }
                                    key="selection"
                                    onKeyDown={[Function]}
                                    role="combobox"
                                    tabIndex={0}
                                  >
                                    <div
                                      className="ant-select-selection__rendered"
                                    />
                                    <span
                                      className="ant-select-arrow"
                                      key="arrow"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "WebkitUserSelect": "none",
                                          "userSelect": "none",
                                        }
                                      }
                                      unselectable="on"
                                    >
                                      <Icon
                                        className="ant-select-arrow-icon"
                                        type="down"
                                      >
                                        <LocaleReceiver
                                          componentName="Icon"
                                        >
                                          <i
                                            aria-label="icon: down"
                                            className="anticon anticon-down ant-select-arrow-icon"
                                          >
                                            <IconReact
                                              className=""
                                              type="down-o"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className=""
                                                data-icon="down"
                                                fill="currentColor"
                                                focusable="false"
                                                height="1em"
                                                key="svg-down"
                                                viewBox="64 64 896 896"
                                                width="1em"
                                              >
                                                <path
                                                  d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                  key="svg-down-svg-0"
                                                />
                                              </svg>
                                            </IconReact>
                                          </i>
                                        </LocaleReceiver>
                                      </Icon>
                                    </span>
                                  </div>
                                </div>
                              </Trigger>
                            </SelectTrigger>
                          </Select>
                        </Select>
                      </span>
                      <Animate
                        animation={Object {}}
                        component=""
                        componentProps={Object {}}
                        key="help"
                        onAppear={[Function]}
                        onEnd={[Function]}
                        onEnter={[Function]}
                        onLeave={[Function]}
                        transitionAppear={true}
                        transitionEnter={true}
                        transitionLeave={true}
                        transitionName="show-help"
                      />
                    </div>
                  </div>
                </Col>
              </div>
            </Row>
          </FormItem>
          <Button
            block={false}
            className="submitBtn"
            ghost={false}
            htmlType="button"
            loading={false}
          >
            <Wave>
              <button
                className="ant-btn submitBtn"
                onClick={[Function]}
                type="button"
              >
                <span
                  key=".0"
                >
                  提 交
                </span>
              </button>
            </Wave>
          </Button>
          <table />
          &gt;
        </form>
      </Form>
    </Component>
  </Form(WrappedComponent)>
</ControlForm>
`;
